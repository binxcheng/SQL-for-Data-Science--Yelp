Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	# Select count(*)
	# from table
	
i. Attribute table =10000
ii. Business table =10000
iii. Category table =10000
iv. Checkin table =10000
v. elite_years table =10000
vi. friend table = 10000
vii. hours table =10000
viii. photo table =10000
ix. review table =10000
x. tip table =10000
xi. user table =10000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.
	
i. Business =10000 #select count(distinct id) from business
ii. Hours =1562 	#select count(distinct business_id) from hours
iii. Category =2643 #select count(distinct business_id) from category
iv. Attribute =1115 #select count(distinct business_id) from attribute
v. Review =8090 	#select count(distinct business_id) from review
vi. Checkin =493	#select count(distinct business_id) from checkin 
vii. Photo =6493	#select count(distinct business_id) from photo
viii. Tip =3979		#select count(distinct business_id) from tip 
ix. User =10000		#select count(distinct id) from user
x. Friend =11 		#Select count(distinct user_id) from friend
xi. Elite_years =2780 #Select count (distinct user_id) from elite_years

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: No
	
	
	SQL code used to arrive at answer:
	Select count(*)
		From user
			Where coalesce(id,name,review_count,yelping_since, useful, funny, cool,fans,
			average_stars,compliment_hot, compliment_more, compliment_profile, compliment_cute,
			compliment_list,compliment_note, compliment_plain, compliment_cool, compliment_funny,	
			compliment_writer, compliment_photos) is Null
	
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
			#Select min(stars), max(stars), Avg(stars)
				#From review
		min:1		max:5		avg:3.7082
	
	ii. Table: Business, Column: Stars
			#Select min(stars), max(stars), Avg(stars)
				#From Business
		min:1		max:5		avg:3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min:0		max:2		avg:0.0144
			#Select min(Likes), max(Likes), Avg(Likes)
				#From Tip
	
	iv. Table: Checkin, Column: Count
			#Select min(count), max(count), Avg(count)
				#From Checkin
		min:1		max:53		avg:1.9414
		
	
	v. Table: User, Column: Review_count
			#Select min(Review_count), max(Review_count), Avg(Review_count)
				#From User
		min:0		max:2000		avg:24.2995
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer: 
Select city,
	Sum(review_count) As reviews
From business
Group by city
Order by reviews DESC
	
	
	Copy and Paste the Result Below:
+-----------------+---------+
| city            | reviews |
+-----------------+---------+
| Las Vegas       |   82854 |
| Phoenix         |   34503 |
| Toronto         |   24113 |
| Scottsdale      |   20614 |
| Charlotte       |   12523 |
| Henderson       |   10871 |
| Tempe           |   10504 |
| Pittsburgh      |    9798 |
| Montréal        |    9448 |
| Chandler        |    8112 |
| Mesa            |    6875 |
| Gilbert         |    6380 |
| Cleveland       |    5593 |
| Madison         |    5265 |
| Glendale        |    4406 |
| Mississauga     |    3814 |
| Edinburgh       |    2792 |
| Peoria          |    2624 |
| North Las Vegas |    2438 |
| Markham         |    2352 |
| Champaign       |    2029 |
| Stuttgart       |    1849 |
| Surprise        |    1520 |
| Lakewood        |    1465 |
| Goodyear        |    1155 |
+-----------------+---------+

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:
Select Stars,
    Sum (review_count) AS counts
From business
Where city = 'Avon'
Group by stars


Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
+-------+--------+
| stars | counts |
+-------+--------+
|   1.5 |     10 |
|   2.5 |      6 |
|   3.5 |     88 |
|   4.0 |     21 |
|   4.5 |     31 |
|   5.0 |      3 |
+-------+--------+

ii. Beachwood

SQL code used to arrive at answer:
Select Stars,
    Sum (review_count) AS counts
From business
Where city = 'Beachwood'
Group by stars

Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
+-------+--------+
| stars | counts |
+-------+--------+
|   2.0 |      8 |
|   2.5 |      3 |
|   3.0 |     11 |
|   3.5 |      6 |
|   4.0 |     69 |
|   4.5 |     17 |
|   5.0 |     23 |
+-------+--------+		


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
		Select id, name, review_count
			From User
			Order by review_count DESC
			Limit 3
		
	Copy and Paste the Result Below:
+------------------------+--------+--------------+
| id                     | name   | review_count |
+------------------------+--------+--------------+
| -G7Zkl1wIWBBmD0KRy_sCw | Gerald |         2000 |
| -3s52C4zL_DHRK0ULG6qtg | Sara   |         1629 |
| -8lbUNlXVSoXqaRRiHiSNg | Yuri   |         1339 |
+------------------------+--------+--------------+


8. Does posing more reviews correlate with more fans?
		Posing more reviews doesn't necessary correlate with more fans. It also included the 
	factors of their yelping_since category.

	Please explain your findings and interpretation of the results:		
		Select id, name, review_count, fans, yelping_since
			From User
			Order by fans DESC
+------------------------+-----------+--------------+------+---------------------+
| id                     | name      | review_count | fans | yelping_since       |
+------------------------+-----------+--------------+------+---------------------+
| -9I98YbNQnLdAmcYfb324Q | Amy       |          609 |  503 | 2007-07-19 00:00:00 |
| -8EnCioUmDygAbsYZmTeRQ | Mimi      |          968 |  497 | 2011-03-30 00:00:00 |
| --2vR0DIsmQ6WfcSzKWigw | Harald    |         1153 |  311 | 2012-11-27 00:00:00 |
| -G7Zkl1wIWBBmD0KRy_sCw | Gerald    |         2000 |  253 | 2012-12-16 00:00:00 |
| -0IiMAZI2SsQ7VmyzJjokQ | Christine |          930 |  173 | 2009-07-08 00:00:00 |
| -g3XIcCb2b-BD0QBCcq2Sw | Lisa      |          813 |  159 | 2009-10-05 00:00:00 |
| -9bbDysuiWeo2VShFJJtcw | Cat       |          377 |  133 | 2009-02-05 00:00:00 |
| -FZBTkAZEXoP7CYvRV2ZwQ | William   |         1215 |  126 | 2015-02-19 00:00:00 |
| -9da1xk7zgnnfO1uTVYGkA | Fran      |          862 |  124 | 2012-04-05 00:00:00 |
| -lh59ko3dxChBSZ9U7LfUw | Lissa     |          834 |  120 | 2007-08-14 00:00:00 |
| -B-QEUESGWHPE_889WJaeg | Mark      |          861 |  115 | 2009-05-31 00:00:00 |
| -DmqnhW4Omr3YhmnigaqHg | Tiffany   |          408 |  111 | 2008-10-28 00:00:00 |
| -cv9PPT7IHux7XUc9dOpkg | bernice   |          255 |  105 | 2007-08-29 00:00:00 |
| -DFCC64NXgqrxlO8aLU5rg | Roanna    |         1039 |  104 | 2006-03-28 00:00:00 |
| -IgKkE8JvYNWeGu8ze4P8Q | Angela    |          694 |  101 | 2010-10-01 00:00:00 |
| -K2Tcgh2EKX6e6HqqIrBIQ | .Hon      |         1246 |  101 | 2006-07-19 00:00:00 |
| -4viTt9UC44lWCFJwleMNQ | Ben       |          307 |   96 | 2007-03-10 00:00:00 |
| -3i9bhfvrM3F1wsC9XIB8g | Linda     |          584 |   89 | 2005-08-07 00:00:00 |
| -kLVfaJytOJY2-QdQoCcNQ | Christina |          842 |   85 | 2012-10-08 00:00:00 |
| -ePh4Prox7ZXnEBNGKyUEA | Jessica   |          220 |   84 | 2009-01-12 00:00:00 |
| -4BEUkLvHQntN6qPfKJP2w | Greg      |          408 |   81 | 2008-02-16 00:00:00 |
| -C-l8EHSLXtZZVfUAUhsPA | Nieves    |          178 |   80 | 2013-07-08 00:00:00 |
| -dw8f7FLaUmWR7bfJ_Yf0w | Sui       |          754 |   78 | 2009-09-07 00:00:00 |
| -8lbUNlXVSoXqaRRiHiSNg | Yuri      |         1339 |   76 | 2008-01-03 00:00:00 |
| -0zEEaDFIjABtPQni0XlHA | Nicole    |          161 |   73 | 2009-04-30 00:00:00 |
+------------------------+-----------+--------------+------+---------------------+
	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer:
Love: 1780									hate:232

	
	SQL code used to arrive at answer:
Select count(*)
From review
Where text Like '%hate%' 

	Select count(*)
	From review
	Where text Like '%love%'
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
		Select name, fans
		From user
		order by Fans DESC
		Limit 10
	
	Copy and Paste the Result Below:
+-----------+------+
| name      | fans |
+-----------+------+
| Amy       |  503 |
| Mimi      |  497 |
| Harald    |  311 |
| Gerald    |  253 |
| Christine |  173 |
| Lisa      |  159 |
| Cat       |  133 |
| William   |  126 |
| Fran      |  124 |
| Lissa     |  120 |
+-----------+------+
	
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
i. Do the two groups you chose to analyze have a different distribution of hours?
	City: Phoenix
	Category: Food
The hours are different. 	

+----------------------------------------+---------+-------+----------+----------------------+--------------+
| name                                   | city    | stars | category | hours                | review_count |
+----------------------------------------+---------+-------+----------+----------------------+--------------+
| Starbucks                              | Phoenix |   3.0 | Food     | Saturday|5:00-20:00  |           52 |
| Bootleggers Modern American Smokehouse | Phoenix |   4.0 | Food     | Saturday|11:00-22:00 |          431 |
+----------------------------------------+---------+-------+----------+----------------------+--------------+

ii. Do the two groups you chose to analyze have a different number of reviews?
    The group with a higher stars has more numbers on the review count.      
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.
		The location and the address didn't pply significant details. However, the postal code is different,
	meaning the two stores might be in different district with in the Phoenix city. 

+----------------------------------------+---------+-------+----------+----------------------+--------------+-----------------------------+-------------+
| name                                   | city    | stars | category | hours                | review_count | address                     | postal_code |
+----------------------------------------+---------+-------+----------+----------------------+--------------+-----------------------------+-------------+
| Starbucks                              | Phoenix |   3.0 | Food     | Saturday|5:00-20:00  |           52 | 4605 E Chandler Blvd, Ste A | 85048       |
| Bootleggers Modern American Smokehouse | Phoenix |   4.0 | Food     | Saturday|11:00-22:00 |          431 | 3375 E Shea Blvd            | 85028       |
+----------------------------------------+---------+-------+----------+----------------------+--------------+-----------------------------+-------------+

SQL code used for analysis:
Select
name,
city,
stars,
category.category,
hours.hours,
review_count, 
address,
postal_code
From
(business inner join category on business.id=category.business_id)
inner join hours on business.id= hours.business_id
where business.city is 'Phoenix'
And category.category is 'Food'
Group by stars
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:
			average_review 
    Open: 	31.76
	Close:  23.2
         
ii. Difference 2:
			average_stars
	Open:	3.68
	Close:	3.52
   
         
         
SQL code used for analysis:

Select
count(*) as number_of_business,
round(Avg(review_count),2) as average_review,
round(Avg(stars),2) as average_stars, 
sum(review_count) as total_review, is_open
From 
business
Group by business.is_open
	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:
    Different cuisines on yelp in Toronto city 
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:

    I want to if there's any relationship between different type of cuisines and stars. 
		Compare between: 	Chinese
							Korean
							Mexican
							Vietnamese
							Japanese
		I would need the data from the category section,	
												resturant_numbers
												avg(review_count)
		I choose Toronto to be city. 
                  
iii. Output of your finished dataset:
 
+----------+-------------------+-------------------+---------+------------+
| category | resturant_numbers | avg(review_count) | city    | avg(stars) |
+----------+-------------------+-------------------+---------+------------+
| Korean   |                 7 |               8.0 | Toronto |        4.5 |
| Japanese |                14 |               6.5 | Toronto |       3.25 |
+----------+-------------------+-------------------+---------+------------+
         
iv. Provide the SQL code you used to create your final dataset:

Select
category.category, count(business.name) as resturant_numbers,
avg(review_count), 
business.city,
avg(stars)
From 
business inner join hours on business.id =hours.business_id
inner join category on category.business_id = business.id
where
city is 'Toronto'
and
category.category in ('Chinese', 'Korean','Mexican','Vietname','Japanese')
group by category.category
order by avg(stars) DESC
